(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{120:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return p})),n.d(t,"metadata",(function(){return d})),n.d(t,"toc",(function(){return u})),n.d(t,"default",(function(){return m}));var r=n(3),a=n(7),i=n(0),o=n.n(i),c=n(124),s=n(323),l=n.n(s);l.a.initialize({startOnLoad:!0});var b=function(e){var t=e.chart;return Object(i.useEffect)((function(){l.a.contentLoaded()}),[]),o.a.createElement("div",{className:"mermaid"},t)},p={title:"Graph of Relations"},d={unversionedId:"overview/concepts/graph-of-relations",id:"overview/concepts/graph-of-relations",isDocsHomePage:!1,title:"Graph of Relations",description:"Relation tuples can be modeled or represented as an acyclic directed graph of relationships between an Object and a Subject. The graph",source:"@site/docs/overview/concepts/graph-of-relations.mdx",sourceDirName:"overview/concepts",slug:"/overview/concepts/graph-of-relations",permalink:"/docs/overview/concepts/graph-of-relations",editUrl:"https://github.com/authorizer-tech/authorizer-web/edit/master/docs/docs/overview/concepts/graph-of-relations.mdx",version:"current",frontMatter:{title:"Graph of Relations"},sidebar:"tutorialSidebar",previous:{title:"Subjects",permalink:"/docs/overview/concepts/subjects"},next:{title:"Snaptokens",permalink:"/docs/overview/concepts/snaptokens"}},u=[{value:"Example",id:"example",children:[]},{value:"Graph Observations",id:"graph-observations",children:[]}],h={toc:u};function m(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},h,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,Object(c.b)("a",{parentName:"p",href:"./relation-tuples"},"Relation tuples")," can be modeled or represented as an acyclic directed graph of relationships between an ",Object(c.b)("a",{parentName:"p",href:"./objects"},"Object")," and a ",Object(c.b)("a",{parentName:"p",href:"./subjects"},"Subject"),". The graph\nconsists of three types of nodes:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"./objects"},"Object")," node - These represent objects in the object graph."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"./subjects#subject-sets"},"SubjectSet")," node - These represent intermediate relationships between two ",Object(c.b)("inlineCode",{parentName:"li"},"(namespace, object, relation)")," pairs."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"./subjects#subject-id"},"SubjectID")," node - These represent an identifier that uniquely identifies an actor (e.g. an end-user or client app).")),Object(c.b)("p",null,"Representing relation tuples in this way helps us better\nunderstand the query time and space complexity used by the internal search algorithm."),Object(c.b)("h2",{id:"example"},"Example"),Object(c.b)("p",null,"Consider the following table of relation tuples:"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"namespace:object"),Object(c.b)("th",{parentName:"tr",align:null},"relation"),Object(c.b)("th",{parentName:"tr",align:null},"subject"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"directories:dir1"),Object(c.b)("td",{parentName:"tr",align:null},"view"),Object(c.b)("td",{parentName:"tr",align:null},"user1")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"directories:dir1"),Object(c.b)("td",{parentName:"tr",align:null},"view"),Object(c.b)("td",{parentName:"tr",align:null},"groups:group1#member")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"groups:group1"),Object(c.b)("td",{parentName:"tr",align:null},"member"),Object(c.b)("td",{parentName:"tr",align:null},"user2")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"files:file1"),Object(c.b)("td",{parentName:"tr",align:null},"parent"),Object(c.b)("td",{parentName:"tr",align:null},"directories:dir1#...")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"files:file1"),Object(c.b)("td",{parentName:"tr",align:null},"view"),Object(c.b)("td",{parentName:"tr",align:null},"directories:dir1#view")))),Object(c.b)(b,{chart:"\ngraph TD\n\tsubgraph obj [Object nodes]\n\t\tA[dir1] --\x3e |parent| B\n\t\tB[file1]\n\t\tG[group1]\n\tend\n\tsubgraph subjID [SubjectID nodes]\n\t\tD([user1])\n\t\tE([user2])\n\tend\n\tsubgraph subSets [SubjectSet nodes]\n\t\tI{{group1#member}}\n\t\tJ{{dir1#view}}\n\tend\n\tA --\x3e |view| D\n\tB --\x3e |view| J\n\tI .-> E\n\tG --\x3e |member| E\n\tJ .-> D\n\tJ --\x3e |view| I\n\tB --\x3e |view| I\n\tA --\x3e |view| I\n",mdxType:"Mermaid"}),Object(c.b)("p",null,"Solid edges represent explicit relations, while dotted edges represent relations inherited through a subject set."),Object(c.b)("h2",{id:"graph-observations"},"Graph Observations"),Object(c.b)("p",null,"A ",Object(c.b)("a",{parentName:"p",href:"../../api-reference/check-service#check"},"Check")," request of the form ",Object(c.b)("inlineCode",{parentName:"p"},"Check(namespace:object#relation@subject)")," will be evaluated by searching the graph starting at an object and going through it's relations in search for the matching subject. A Check request is allowed if there is such a path."),Object(c.b)("p",null,"The algorithm used to traverse the graph is a concurrent breadth-first search. In the worst case this traversal has a time complexity of O(n+e) where n is the number of nodes reachable from the ",Object(c.b)("inlineCode",{parentName:"p"},"namespace:object#relation")," node through its edges e. The traversal has a space complexity of O(n).\nTypically, both space and time complexity are O(b^d) where b is the maximum breadth and d the maximum depth in the graph search. This means that the complexity heavily depends on\nthe structure of the graph. If the graph contains deeply nested indirections, it will require multiple recursive calls to resolve those indirections. If there are widely nested\nindirections, we can resolve them more concurrently."))}m.isMDXComponent=!0},546:function(e,t,n){var r={"./locale":304,"./locale.js":304};function a(e){var t=i(e);return n(t)}function i(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=i,e.exports=a,a.id=546}}]);